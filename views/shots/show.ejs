<%- layout('layouts/boilerplate') %>

<div class="shot-detail-wrapper">
  <div class="shot-detail-container">
    <div class="shot-navigation">
      <a href="/shot" class="back-link">
        <svg class="back-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M19 12H5M12 19l-7-7 7-7" />
        </svg>
        Back to Homepage
      </a>
    </div>

    <div class="shot-showcase">
      <div class="shot-image-container">
        <img src="<%= shot.image %>" alt="<%= shot.title %>" class="showcase-image" />
      </div>

      <div class="shot-info-section">
        <div class="shot-header-content">
          <div class="title-area">
            <h1 class="showcase-title"><%= shot.title %></h1>

            <div class="stat-badge-header">
              <div class="stat-badge views-badge">
                <i class="fa-solid fa-eye stat-icon-views"></i>
                <span class="stat-number"><%= shot.views || 0 %></span>
              </div>

              <% if (currUser) { %>
                <div class="stat-badge thumbs-badge <%= isLiked ? 'liked' : '' %>" onclick="toggleThumbs(this)">
                  <i class="<%= isLiked ? 'fa-solid' : 'fa-regular' %> fa-thumbs-up stat-icon-likes"
                     id="thumbsIcon"
                     <% if (isLiked) { %> style="color:#123ac0;" <% } %>>
                  </i>
                  <span class="stat-number" id="thumbsCount"><%= shot.likes || 0 %></span>
                </div>
              <% } else { %>
                <div class="stat-badge thumbs-badge" onclick="showLoginMessage()">
                  <i class="fa-regular fa-thumbs-up stat-icon-likes"></i>
                  <span class="stat-number"><%= shot.likes || 0 %></span>
                </div>
              <% } %>
            </div>
          </div>

          <h1 class="author-name-mini">Shot By : <a href="/user/<%= shot.author.id %>"><%= shot.author.username %></a></h1>

          <% if (currUser && currUser.id == shot.author.id) { %>
            <div class="action-buttons">
              <a href="/shot/<%= shot._id %>/edit" class="action-btn edit-btn">
                <svg class="btn-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" />
                  <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z" />
                </svg>
                Edit
              </a>

              <form class="delete-action" action="/shot/<%= shot._id %>?_method=DELETE" method="POST" onsubmit="return confirm('Are you sure you want to delete this shot?')">
                <button type="submit" class="action-btn delete-btn">
                  <svg class="btn-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <polyline points="3,6 5,6 21,6" />
                    <path d="M19,6v14a2,2,0,0,1-2,2H7a2,2,0,0,1-2-2V6m3,0V4
                             a2,2,0,0,1,2-2h4a2,2,0,0,1,2 2V6" />
                  </svg>
                  Delete
                </button>
              </form>
            </div>
          <% } %>

          <% if (shot.description) { %>
            <div class="description-section">
              <div class="showcase-description">
                <% if (shot.tags && shot.tags.length > 0) { %>
                  <% shot.tags.forEach(tag => { %>
                    <span>#<%= tag %> &nbsp;</span>
                  <% }) %>
                  <br />
                <% } %>
                <%= shot.description %>
              </div>
            </div>
          <% } %>

        </div>
      </div>
    </div>
  </div>
</div>

<script>
  window.toggleThumbs = async function(element) {
    const thumbsIcon = element.querySelector("#thumbsIcon");
    const thumbsCount = element.querySelector("#thumbsCount");
    const shotId = "<%= shot._id %>";

    try {
      const response = await fetch(`/shot/${shotId}/stat/likes`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({})
      });

      if (response.ok) {
        const data = await response.json();

        if (data.isLiked) {
          thumbsIcon.classList.remove("fa-regular");
          thumbsIcon.classList.add("fa-solid");
          thumbsIcon.style.color = "#123ac0";
          element.classList.add("liked");
        } else {
          thumbsIcon.classList.remove("fa-solid");
          thumbsIcon.classList.add("fa-regular");
          thumbsIcon.style.color = "";
          element.classList.remove("liked");
        }

        thumbsCount.textContent = data.likes;
        thumbsIcon.style.transform = "scale(1.2)";
        setTimeout(() => thumbsIcon.style.transform = "scale(1)", 150);
      }
    } catch (error) {
      console.error("Error updating likes:", error);
    }
  };
</script>
